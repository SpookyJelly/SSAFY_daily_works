#4408번 자기 방으로 돌아가기 (D4)

"""

모든 학생들은 현재 위치에서 자신의 방으로 돌아가려고 하는데,
만약 두 학생이 자기방으로 돌아가면서 지나는 복도의 구간이 겹치면 두 학생은 동시에 돌아갈 수 없다.
예를 들어 (방1 -> 4) 와 (방3 -> 6) 은 복도 구간이 겹치므로 한 사람은 기다렸다가
다음 차례에 이동해야 한다. 이동하는 데에는 거리에 관계없이 단위 시간이 걸린다고 하자.
각 학생들의 현재 방 위치와 돌아가야 할 방의 위치의 목록이 주어질 때,
최소 몇 단위시간만에 모든 학생들이 이동할 수 있는지를 구하시오.

[입력]
입력은 T(≤10)개의 테스트 케이스로 되어 있다.
각 테스트 케이스의 첫 줄에는 돌아가야 할 학생들의 수 N이 주어진다.
다음 N 줄에는 각 학생의 현재 방 번호(≤400)와 돌아가야 할 방의 번호(≤400)가 주어진다.
주어지는 2N개의 방 번호 중 중복되는 것은 없다.

[출력]
테스트 케이스 T에 대한 결과는 “#T ”을 찍고,
각 테스트 케이스마다 필요한 시간을 한 줄에 하나씩 출력한다.

"""

# import sys
# sys.stdin = open("4408_input.txt","r")

TC = int(input())


for tc in range(1,TC+1):
    N = int(input())
    corridor = list(0 for _ in range(201))
    for __ in range(N):
        S,D = map(int,input().split())
        if S>D:
            S,D = D,S

        if S%2:
            idx_s = S//2
        else:
            idx_s = S//2 - 1
        if D%2:
            idx_d = D//2
        else:
            idx_d = D//2 -1


        for idx in range(idx_s, idx_d + 1):
            corridor[idx] += 1
    print('#{0} {1}'.format(tc, max(corridor)))

# 아니 이게 맞아??? 아니 왜 ??