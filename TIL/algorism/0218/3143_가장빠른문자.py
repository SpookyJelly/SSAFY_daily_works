# 3143번 가장 빠른 문자열 타이핑 (D4)

"""
어떤 문자열 A를 타이핑하려고 한다.

그냥 한 글자씩 타이핑 한다면 A의 길이만큼 키를 눌러야 할 것이다.

여기에 속도를 조금 더 높이기 위해 어떤 문자열 B가 저장되어 있어서
키를 한번 누른 것으로 B전체를 타이핑 할 수 있다.

이미 타이핑 한 문자를 지우는 것은 불가능하다.

예를 들어 A=”asakusa”, B=”sa”일 때, 다음 그림과 같이 B를 두 번 사용하면
5번 만에 A를 타이핑 할 수 있다.

[입력]

첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
각 테스트 케이스마다 첫 번째 줄에 두 문자열 A, B가 주어진다.
A의 길이는 1이상 10,000이하, B의 길이는 1이상 100이하이다.


[출력]

각 테스트 케이스마다 A 전체를 타이핑 하기 위해 키를 눌러야 하는 횟수의 최솟값을 출력한다.

"""

# A 컷팅 == B 인가? 를 알아내면 될듯?

TC = int(input())
#TC = 1
for tc in range(1,TC+1):
    A,B = input().split()
    #A = 'aabbbbaa'
    #B = 'bb'
    N = len(A)
    M = len(B)
    cnt = 0
    i = 0
    while i < N-M+1:
        if A[i:M+i] == B:
            cnt+=1
            i += M-1
        i +=1
    # 타입이 어떻게 줄었는지 생각해보자. cnt * M 번 쳤어야할 문자가
    # cnt 번만 쳐도 되는 것이다. 그러면 원본과의 차이는 cnt*(M-1)번이다.
    # 그럼 새로 쳐야할 타이핑은 원래 길이 - cnt*(M-1)번이다
    ans = N - cnt*(M-1)
    print('#{0} {1}'.format(tc,ans))

# 아니 이게 틀려?
# 음...중복 겹치는 문제 때문에 에러가 났다.
# 만약에 조건을 만족해서 cnt가 올랐으면, B 길이만큼 건너뛰게 하자
# for문으로는 안된다. --> 조건 만족할때 i를 올려도 for i in range() 부분에서 값이 다시 덮어씌우짐
# 그럴때 while문으로 해결하니까 되었다.