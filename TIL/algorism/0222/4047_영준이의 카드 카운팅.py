# 4047번 영준이의 카드 카운팅. (D3)

"""
한 덱”이란 스페이드, 다이아몬드, 하트, 클로버 무늬 별로
각각 A, 2~10, J, Q, K의 라벨 즉 4개의 무늬 별로
각각 13장씩 총 52장의 카드가 있는 모음을 의미한다.
편의상 A는 1, J, Q, K는 11, 12, 13으로 하여 1~13의 숫자가 카드에 적혀있다고 하자.

몇장의 카드를 이미 가지고 있는데, 게임을 하기 위해서 몇장의 카드가 더 필요한지 알고 싶어함
이미 겹치는거 가지고 있으면 오류 출력


[입력]

맨 위 줄에 테스트케이스의 개수가 주어진다.
각 테스트케이스 별로 순서대로 첫 번째 줄에
지금 영준이가 가지고 있는 카드에 대한 정보 S (1 ≤ |S| ≤ 1000)가 주어진다.

S는 각각 3자리로 표현되는 카드들의 정보를 붙여서 만든 하나의 문자열인데 각 카드는 TXY 꼴로 표현되며,

T는 카드의 무늬(S, D, H, C)이며 XY는 카드의 숫자 (01 ~ 13)이다.

[출력]

각 테스트케이스 별로 순서대로 한 줄씩 답을 출력하는데,
문자열 S를 보고 지금 무늬 별로(S, D, H, C 순서로) 몇 장의 카드가 부족한지 출력하여라.

이미 겹치는 카드가 있다면 문자열 “ERROR” (쌍따옴표는 출력하지 않는다)를 출력한다

"""
# 접근방법: 일단 제일먼저 드는 생각은 입력을 3자리씩 끊기(문자열로)
# 아니면, 이미 구조화 된 정보니까, 딕셔너리로 집어넣는것도 괜찮을듯
# 에러나오는 케이스는 단 하나, 겹치는 부분 나올 때니까 처음 인풋에서 걸러버리자
# 중복을 쳐내는 함수, selection sort에 착안하여, 앞쪽에서부터 쭉쭉 나가면서 검사

import sys
sys.stdin = open('4047_input.txt','r')

def areyouerror(lst):
    for k in range(len(cards)-1):
        for j in range(1+k, len(cards)):
            if cards[k] == cards[j]:
                return 1
    return 0



TC = int(input())

for tc in range(1,TC+1):
    strings = input()
    card_dic = {
        'S': 0,
        'D': 0,
        'H': 0,
        'C': 0,
    }

    # 입력 받은 문자열을 카드패의 형식에 맞게 분리한 후 하나의 리스트로 모음
    # border를 잘 생각하면서 반복문을 설계하자.
    i = 3  # 이걸 i = 0 으로 시작하게 만들수도 있는데, 굳이 3으로 한 이유를 물으셨다. 어...ㅋㅋㅋ
    cards = []
    while i-3 < len(strings):
        cards.append(strings[i-3:i])

        i += 3

    #print(card,type(card),card[0:3])
    #print(cards)
    # 이제 여기서 중복이 있으면 쳐내야하는데....좀 효율적으로 하는 방법은 없을까?
    # 그리고 여기서 쳐낸다고 하더라도, 이후의 dic에 값 집어 넣기는 할텐데, result로 걸러야겠다

    #print('error :',areyouerror(cards))

    #입력 조건이 에러인지 areyouerror 함수를 통해서 확인
    # 에러면 에러라고 출력
    if areyouerror(cards):
        print("#{0} ERROR".format(tc))
    # 아니면 멀쩡한 값 출력
    else:
        for element in cards:
            card_dic[element[0]] += 1


        print('#{0} {1} {2} {3} {4}'.format(tc, 13 - card_dic['S'], 13 - card_dic['D'], 13 - card_dic['H'], 13 - card_dic['C']))


# 이걸 2차원 배열로 스마트하게 할 수 도 있네...
# 행을 패턴, 열을 카드의 숫자 이렇게
# 기본적으로는 전부 string에서 카드패 추리는 것은 같다. 근데 그걸 배열에 넣을지 아니면 사전에 넣을지를 결정.